# syntax=docker.io/docker/dockerfile:1.3@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2
FROM node:18-alpine@sha256:44aaf1ccc80eaed6572a0f2ef7d6b5a2982d54481e4255480041ac92221e2f11 as cli-build

# Support additional root CAs
COPY README.md cert.pem* /certs/
# Alpine
RUN if [ -e /certs/cert.pem ]; then cp /certs/cert.pem /etc/ssl/cert.pem; fi

# install CLI deps & build
WORKDIR /app

# copy sdk dependencies
COPY ethereum/package.json ethereum/package-lock.json ./ethereum/
RUN npm ci --prefix ethereum
COPY ethereum ./ethereum

COPY solana/idl ./solana/idl

# copy package.json & package-lock.json by themselves to create a cache layer
COPY package.json package-lock.json ./
COPY sdk/js/package.json ./sdk/js/
COPY clients/js/package.json ./clients/js/
RUN npm ci

# copy the rest of the source files, as a layer on top of the deps
COPY sdk/js ./sdk/js
COPY clients/js ./clients/js

# build SDK and CLI
RUN npm run build

FROM scratch AS cli-export
COPY --from=cli-build /app/package.json /app/package-lock.json ./
COPY --from=cli-build /app/node_modules ./node_modules
COPY --from=cli-build /app/sdk/js ./sdk/js
COPY --from=cli-build /app/clients/js ./clients/js
